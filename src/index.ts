import { app } from 'electron';
import { WindowManager } from './ts/window';
import path from 'path';

/**
 * This allows TypeScript to pick up the magic constant that's auto-generated by Forge's Webpack 
 * plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on 
 * whether you're running in development or production).
 */
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;

/** 
 * Handle creating/removing shortcuts on Windows when installing/uninstalling.
 */
if (require('electron-squirrel-startup')) {
    // eslint-disable-line global-require
    app.quit();
}

/**
 * This method will be called when Electron has finished 
 * initialization and is ready to create browser windows. 
 * Some APIs can only be used after this event occurs.
 */
app.on('ready', () => {
    WindowManager.create(MAIN_WINDOW_WEBPACK_ENTRY, path.join(__dirname, 'preload.js'));
});

/**
 * Quit when all windows are closed.
 */
app.on('window-all-closed', () => {
    app.quit();
});